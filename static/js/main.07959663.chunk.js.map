{"version":3,"sources":["styled-components/ThemeColors.styled.js","components/sidebar/Sidebar.styled.js","components/sidebar/Sidebar.js","styled-components/Text.styled.js","styled-components/Default.styled.js","components/Main/subcomponents/TransactionInput/Forms.styled.js","components/Main/subcomponents/TransactionInput/Form.js","components/Main/subcomponents/TransactionInput/TransactionInput.js","helpers/calc.js","components/Main/subcomponents/Totals/Totals.styled.js","components/Main/subcomponents/Totals/Totals.js","components/Main/subcomponents/DatePicker/DatePicker.styled.js","components/Main/subcomponents/DatePicker/DatePicker.js","components/Main/subcomponents/TransactionOutput/TransactionOutput.styled.js","components/Main/subcomponents/TransactionOutput/TransactionOutput.js","components/Main/subcomponents/Stats/chartSettings.js","components/Main/subcomponents/Stats/Stats.styled.js","components/Main/subcomponents/Stats/DataToShow.js","helpers/groupingData.js","helpers/sort.js","components/Main/subcomponents/Stats/Stats.js","components/Main/subcomponents/Accounts/Accounts.styled.js","components/Main/subcomponents/Accounts/Accounts.js","components/Main/subcomponents/Settings/ThemeToggler/ThemeToggler.styled.js","components/Main/subcomponents/Settings/ThemeToggler/ThemeToggler.js","components/Main/subcomponents/Settings/Settings.styled.js","components/Main/subcomponents/Settings/Settings.js","helpers/accountList.js","helpers/categoriesList.js","components/Main/Main.js","styled-components/GlobalStyle.js","App.js","index.js"],"names":["grey","white","black","light","text","textBg","background","themeTogglerBg","dark","generalColors","income","expense","handleColorTransType","type","handleColorButtonType","SidebarContainer","styled","div","SidebarSelectors","theme","SidebarLabel","label","SidebarRadio","input","Sidebar","props","option","handleOptionChange","justifySmall","name","value","checked","onChange","id","htmlFor","className","Large","p","Main","Bold","Light","Small","OverflowingText","AppContainer","FlexContainer","justifyLarge","FlexContainerBordered","FlexHeader","ScrollingContainer","FixedContainer","ModalBackground","show","ModalContainer","TitleContainer","TransTypeContainer","TransInputContainer","color","FormRadio","RadioLabel","FormLabel","inputStyles","css","FormInput","FormSelect","select","FormButton","button","Form","accounts","categories","errorMsgs","values","mode","handleSubmit","cancelSubmit","handleValueChange","handleDeleteTransaction","blockInvalidCharacter","onSubmit","transactionType","moment","transactionDate","format","fromAccount","disabled","map","item","key","transactionCategory","toAccount","transactionAmount","Math","abs","min","placeholder","onKeyDown","step","transactionNotes","onClick","AddEntry","handleAddTransaction","hideForm","clickedTransData","handleEditTransaction","initialState","Date","useState","setValues","setErrorMsgs","first","useRef","useEffect","current","prevValues","clearInputs","event","preventDefault","isFormValid","message","prevState","handleValidation","now","random","target","includes","filter","arr","criteria","obj","Object","keys","every","c","calcTotalOfFiltered","criteriaContent","amount","reduce","a","b","Number","calcFromAccount","array","total","element","totalValueFormat","signed","toFormat","numeral","singleValueFormat","LargeNumberContainer","Totals","dataAsset","dataExpense","dataTotal","heading","justify","DatePickerContainer","ArrowButton","DatePicker","moveToNextMonth","moveToPreviousMonth","dataToRender","month","monthsShort","year","TransactionOutput","DailyTransactionData","GridContainerHead","NoDataContainer","DayContainer","day","NewButton","NewButtonMobile","TransactionDetails","Transaction","getTransactionId","setToAddForm","monthIncomeTotal","monthExpenseTotal","monthTotal","hasOwnProperty","dailyTrans","subItem","dayIncomeTotal","dayExpenseTotal","transactions","createData","data","colorType","v","inPercent","max","labels","categoryName","datasets","backgroundColor","borderWidth","customization","dataValue","dataLabel","plugins","legend","display","tooltip","callbacks","tooltipItem","dataIndex","layout","padding","MobileScrollingContainer","DesktopScrollingContainer","StatsFlexContainer","DataContainer","DataContainerHeading","PieContainer","RadioContainer","selection","PercentContainer","index","StatsRadio","DataToShow","length","options","percent","processData","transaction","sortedData","sort","item1","item2","getTime","modifiedData","computeMonthlyTotal","items","days","dayTotal","computeTransAmounts","groupByDate","forEach","date","selectedDate","selectedDateMonth","getMonth","selectedDateYear","getYear","some","push","indexMonth","findIndex","indexDay","groupByCategory","groupedData","filteredByDate","filteredData","category1","toUpperCase","category2","categoriesArray","Set","category","toDivide","dataToSort","sortByValue","Stats","dateToRender","incomeCategories","setIncomeCategories","expenseCategories","setExpenseCategories","setSelection","handleSelection","as","AccountContainer","SidebarAccounts","accountsInfo","getAccounts","totalAssets","totalLiabilities","accountName","Slider","span","ThemeTogglerContainer","ThemeToggler","handleDarkMode","isDarkMode","OptionContainer","Settings","accountsList","categoriesList","processedData","setProcessedData","setTransaction","transId","setTransId","setClickedTransData","setDateToRender","setDataToRender","showForm","setShowForm","setMode","getTransactionIndex","indexOf","newDate","setAccountsInfo","displayForm","firstUpdate","toString","filterDataToRender","account","computeLiabilities","handleData","TransactionInput","prevData","newTransaction","prev","i","currentTarget","getAttribute","Accounts","initial","GlobalStyle","createGlobalStyle","App","setIsDarkMode","setOption","ThemeColors","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07959663.chunk.js","sourcesContent":["// Colors\nconst blue = \"#279EE9\";\nconst red = \"#F17148\";\nconst grey = \"#BDBDBD\";\nconst lightGrey = \"#FBFBFB\";\nconst white = \"#FFFFFF\";\nconst black = \"#292C2E\";\nconst veryBlack = \"#2C2D30\";\n\n// Themes\n\nexport const light = {\n\ttext: black,\n\ttextBg: white,\n\tbackground: lightGrey,\n\tthemeTogglerBg: grey,\n};\n\nexport const dark = {\n\ttext: white,\n\ttextBg: black,\n\tbackground: veryBlack,\n\tthemeTogglerBg: black,\n};\n\nexport const generalColors = {\n\tblue: blue,\n\tred: red,\n\tgrey: grey,\n\twhite: white,\n\tmodalBg: \"rgba(189,189,189,0.7)\"\n};\n\n// Pie chart colors\nexport const income = [\n\t\"#023E8A\",\n\t\"#0077B6\",\n\t\"#0096C7\",\n\t\"#00B4D8\",\n\t\"#48CAE4\",\n\t\"#82DDED\",\n\t\"#ADE8F4\",\n\t\"#CAF0F8\",\n];\n\nexport const expense = [\n\t\"#800F2F\",\n\t\"#A4133C\",\n\t\"#C9184A\",\n\t\"#FF4D6D\",\n\t\"#FF758F\",\n\t\"#FF8FA3\",\n\t\"#FFB3C1\",\n\t\"#FFF0F3\",\n];\n\n// Helper functions\nexport const handleColorTransType = (type) => {\n\tswitch (type) {\n\t\tcase \"income\":\n\t\t\treturn generalColors.blue;\n\t\tcase \"expense\":\n\t\t\treturn generalColors.red;\n\t\tcase \"error\":\n\t\t\treturn generalColors.red;\n\t\tcase \"transData\":\n\t\t\treturn generalColors.grey;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};\n\nexport const handleColorButtonType = (type) => {\n\tswitch (type) {\n\t\tcase \"save\":\n\t\t\treturn generalColors.blue;\n\t\tcase \"delete\":\n\t\t\treturn generalColors.red;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n};","import styled from \"styled-components\";\nimport { generalColors } from \"../../styled-components/ThemeColors.styled\";\n\n/* ========== Containers ========== */\nexport const SidebarContainer = styled.div`\n\tposition: fixed;\n\tleft: 0;\n\tbottom: 0;\n\tz-index: 10;\n\twidth: 100%;\n\tborder-top: 0.25px solid ${generalColors.grey};\n\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: block;\n\t\tposition: static;\n\t\tpadding: 0 2vw;\n\t\theight: 100vh;\n\t\tborder-right: 0.1px solid ${generalColors.grey};\n\t}\n`;\n\nexport const SidebarSelectors = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-around;\n\theight:100%;\n\tpadding: 0.5em 0 0.5em 0;\n\tposition: relative;\n\tbackground: ${({ theme }) => theme.background};\n\n\t@media screen and (min-width: 1024px) {\n\t\tflex-flow: column;\n\t\talign-items: flex-start;\n\t\tjustify-content: center;\n\t\tpadding: 10vw 0;\n\t\tmargin: 0 0 0.5em 0;\n\t}\n`;\n\n/* ========== Inputs ========== */\nexport const SidebarLabel = styled.label`\n\tcursor: pointer;\n\ttext-align: center;\n\tcolor: ${generalColors.grey};\n\n\ti {\n\t\tdisplay: block;\n\t\tfont-size: 18px;\n\t\tmargin-bottom: 0.2em;\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\tmargin: 2em 0.75em;\n\t\tfont-size: 20px;\n\t\ti {\n\t\t\tdisplay: inline;\n\t\t\tmargin-right: 0.75em;\n\t\t\tfont-size: 24px;\n\t\t}\n\t}\n`;\n\nexport const SidebarRadio = styled.input`\n\tdisplay: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\t-ms-appearance: none;\n\t-o-appearance: none;\n\tappearance: none;\n\n\t&:checked {\n\t\t& + ${SidebarLabel} {\n\t\t\tcolor: ${generalColors.red};\n\t\t}\n\t}\n`;\n\n","import React from \"react\";\n\n// Styled Components\nimport { SidebarContainer, SidebarSelectors, SidebarRadio, SidebarLabel } from \"./Sidebar.styled\";\n\nfunction Sidebar(props) {\n    const { option, handleOptionChange } = props;\n\n    return (\n        <SidebarContainer>\n            <SidebarSelectors justifySmall='space-around' option={option}>\n                <SidebarRadio\n                    type='radio'\n                    name='sidebarOption'\n                    value='transactions'\n                    checked={option === \"transactions\"}\n                    onChange={handleOptionChange}\n                    id='transactions'\n                />\n\n                <SidebarLabel htmlFor='transactions'>\n                    <i className='fa-solid fa-book'></i>\n                    Transactions\n                </SidebarLabel>\n\n                <SidebarRadio\n                    type='radio'\n                    name='sidebarOption'\n                    value='stats'\n                    checked={option === \"stats\"}\n                    onChange={handleOptionChange}\n                    id='stats'\n                />\n                <SidebarLabel htmlFor='stats'>\n                    <i className='fa-solid fa-chart-column'></i>\n                    Stats\n                </SidebarLabel>\n\n                <SidebarRadio\n                    type='radio'\n                    name='sidebarOption'\n                    value='accounts'\n                    checked={option === \"accounts\"}\n                    onChange={handleOptionChange}\n                    id='accounts'\n                />\n                <SidebarLabel htmlFor='accounts'>\n                    <i className='fa-solid fa-coins'></i>\n                    Accounts\n                </SidebarLabel>\n\n                <SidebarRadio\n                    type='radio'\n                    name='sidebarOption'\n                    value='settings'\n                    checked={option === \"settings\"}\n                    onChange={handleOptionChange}\n                    id='settings'\n                />\n                <SidebarLabel htmlFor='settings'>\n                    <i className='fa-solid fa-gear'></i>\n                    Settings\n                </SidebarLabel>\n            </SidebarSelectors>\n        </SidebarContainer>\n    );\n}\n\nexport default Sidebar;\n","import styled from \"styled-components\";\nimport { handleColorTransType } from \"./ThemeColors.styled\";\n\nexport const Large = styled.p`\n\tfont-weight: bold;\n\tfont-size: 14px;\n\tcolor: ${({ theme }) => theme.text};\n\n\t@media screen and (min-width: 1024px) {\n\t\tfont-size: 36px;\n\t}\n`;\n\nexport const Main = styled.p`\n\tcolor: ${({ type, theme }) => handleColorTransType(type, theme) || theme.text};\n`;\n\nexport const Bold = styled(Main)`\n\tfont-weight: bold;\n`;\n\nexport const Light = styled(Main)`\n\tfont-weight: 300;\n`;\n\nexport const Small = styled.p`\n\tfont-size: 9px;\n\tcolor: ${({ type, theme }) => handleColorTransType(type, theme) || theme.text};\n\n\t@media screen and (min-width: 1024px) {\n\t\tfont-size: 14px;\n\t}\n`;\n\nexport const OverflowingText = styled(Main)`\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`;\n","import styled from \"styled-components\";\nimport { generalColors } from \"./ThemeColors.styled\";\n\n// Consists of styles that are used in more than 2 components (except for App)\n\n/* ======== Containers ======== */\nexport const AppContainer = styled.div`\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: grid;\n\t\tgrid-auto-columns: 1fr;\n\t\tgrid-template-columns: 20% 80%;\n\t\tgrid-template-rows: 1fr;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tgrid-template-columns: 15% 85%;\n\t}\n`;\n\nexport const FlexContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: ${({ justifySmall }) => justifySmall};\n\tbackground: ${({ theme }) => theme.textBg};\n\n\t@media screen and (min-width: 1024px) {\n\t\tjustify-content: ${({ justifyLarge }) => justifyLarge};\n\t}\n`;\n\n export const FlexContainerBordered = styled(FlexContainer)`\n \tpadding: 0.5em 1.5em;\n \tborder-top: 0.1px solid ${generalColors.grey};\n \tborder-bottom: 0.1px solid ${generalColors.grey};\n\tmargin-top: -1px;\n\tmargin-left: -1px;\n `;\n\n export const FlexHeader = styled(FlexContainerBordered)`\n\tpadding: 1em 7vw;\n\n\t@media screen and (min-width: 1024px) {\n\t\tpadding: 2em 7vw;\n\t}\n `;\n\nexport const ScrollingContainer = styled.div`\n\toverflow: auto;\n\tz-index: 1;\n`;\nexport const FixedContainer = styled.div`\n\tposition: sticky;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tz-index: 2;\n\tbackground-color: ${({ theme }) => theme.background};\n`;\n\n/* ======== Modal ======== */\nexport const ModalBackground = styled.div`\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: ${({ show }) => (show ? \"block\" : \"none\")};\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 25;\n\t\theight: 100vh;\n\t\twidth: 100vw;\n\t\topacity: 0.6;\n\t\tbackground-color: ${generalColors.modalBg};\n\t}\n`;\nexport const ModalContainer = styled.div`\n\tposition: fixed;\n\theight: 100vh;\n\twidth: 100vw;\n\tz-index: 20;\n\ttop: 0;\n\tleft: 0;\n\tbackground: ${({ theme }) => theme.textBg};\n\tpadding: 5vw;\n\n\t@media screen and (min-width: 1024px) {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\theight: 60vh;\n\t\twidth: 60vw;\n\t\tmax-width: 825px;\n\t\tz-index: 30;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tborder-radius: 10px;\n\t};\n`;","import styled, { css } from \"styled-components\";\nimport { generalColors, handleColorButtonType, handleColorTransType } from \"../../../../styled-components/ThemeColors.styled\";\nimport { FlexContainer } from \"../../../../styled-components/Default.styled\";\n\n/* ========== Containers ========== */\nexport const TitleContainer = styled.div`\n\tpadding: 1em;\n`;\n\nexport const TransTypeContainer = styled(FlexContainer)`\n\tmargin: 1em 0.5em;\n\tbackground-color: ${({ theme }) => theme.background};\n\n\t& label:nth-child(4) {\n\t\tmargin: 0 0.5em;\n\t}\n`;\nexport const TransInputContainer = styled.div`\n\tmargin: 2em 1em;\n\n\t& button:nth-child(1) {\n\t\tmargin-right: 0.5em;\n\t}\n\n\t& button:nth-child(2) {\n\t\tmargin: 0 0.25em;\n\t}\n\n\t& button:nth-child(3) {\n\t\tmargin-left: 0.5em;\n\t}\n\n\t& > div {\n\t\tmargin: 1em 0;\n\n\t\t& > input {\n\t\t\tcolor: ${({theme}) => theme.color}\n\t\t}\n\t}\n`;\n\n/* ========== Inputs ========== */\nexport const FormRadio = styled.input`\n\tdisplay: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\t-ms-appearance: none;\n\t-o-appearance: none;\n\tappearance: none;\n\n\t&:checked + label {\n\t\tbackground-color: ${({ theme }) => theme.background};\n\t\tborder-color: ${({ value, theme }) => handleColorTransType(value, theme) || theme.text};\n\t\tcolor: ${({ value, theme }) => handleColorTransType(value, theme) || theme.text};\n\t}\n`;\n\nexport const RadioLabel = styled.label`\n\tflex: 1;\n\tcursor: pointer;\n\tpadding: 0.5em 0.5em;\n\tborder: 0.25px solid ${generalColors.grey};\n\tborder-radius: 5px;\n\tbackground-color: ${({ theme }) => theme.background};\n\tfont-size: 12px;\n\ttext-align: center;\n\tcolor: ${generalColors.grey};\n\n\t@media screen and (min-width: 1024px) {\n\t\tfont-size: 18px;\n\t}\n`;\n\nexport const FormLabel = styled.label`\n\tfont-size: 12px;\n\tcolor: ${generalColors.grey};\n\n\t@media screen and (min-width: 1024px) {\n\t\tfont-size: 18px;\n\t}\n`;\n\nconst inputStyles = css`\n\twidth: 70vw;\n\tfont-family: \"Roboto\", sans-serif;\n\toutline: 0;\n\tborder-width: 0 0 0.5px;\n\tcolor: ${({ theme }) => theme.text};\n\tbackground-color: ${({ theme }) => theme.textBg};\n\tborder-color: ${generalColors.grey};\n\t\n\t@media screen and (min-width: 1024px) {\n\t\twidth: 37vw;\n\t\tmax-width: 500px;\n\t\tfont-size: 18px;\n\t}\n`;\n\nexport const FormInput = styled.input`\n\t${inputStyles}\n`;\n\nexport const FormSelect = styled.select`\n\t${inputStyles}\n`;\n\n/* ======== Buttons ======= */\nexport const FormButton = styled.button`\n\tflex: 1;\n\tmargin: 0.5em 0;\n\tpadding: 0.75em 0.5em;\n\tfont: 12px \"Roboto\", sans-serif;\n\tcolor: ${({ value }) => (!value ? ({theme}) => theme.text : generalColors.white)};\n\tbackground-color: ${({ value }) => handleColorButtonType(value) || \"none\"};\n\tborder: 0.5px solid ${({ value }) => handleColorButtonType(value) || generalColors.grey};\n\tborder-radius: 5px;\n\n\t@media screen and (min-width: 1024px) {\n\t\tfont-size: 18px;\n\t}\n`;\n","import React from \"react\";\nimport moment from \"moment\";\n\n// Styled Components\nimport { Bold, Small } from \"../../../../styled-components/Text.styled\";\nimport { FlexContainer, ModalContainer } from \"../../../../styled-components/Default.styled\";\nimport {\n\tFormRadio,\n\tRadioLabel,\n\tFormLabel,\n\tFormInput,\n\tFormSelect,\n\tFormButton,\n\tTitleContainer,\n\tTransTypeContainer,\n\tTransInputContainer,\n} from \"./Forms.styled\";\n\nfunction Form(props) {\n\tconst {\n\t\taccounts,\n\t\tcategories,\n\t\terrorMsgs,\n\t\tvalues,\n\t\tmode,\n\t\thandleSubmit,\n\t\tcancelSubmit,\n\t\thandleValueChange,\n\t\thandleDeleteTransaction,\n\t\tblockInvalidCharacter,\n\t} = props;\n\n\treturn (\n\t\t<ModalContainer>\n\t\t\t<TitleContainer>\n\t\t\t\t<Bold>{mode === \"add\" ? \"Add\" : \"Edit\"} Transaction</Bold>\n\t\t\t</TitleContainer>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t{/* Select transaction type */}\n\t\t\t\t<TransTypeContainer>\n\t\t\t\t\t<FormRadio\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"transactionType\"\n\t\t\t\t\t\tvalue=\"income\"\n\t\t\t\t\t\tid=\"income\"\n\t\t\t\t\t\tchecked={values.transactionType === \"income\"}\n\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<RadioLabel htmlFor=\"income\">\n\t\t\t\t\t\tIncome\n\t\t\t\t\t</RadioLabel>\n\n\t\t\t\t\t<FormRadio\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"transactionType\"\n\t\t\t\t\t\tvalue=\"expense\"\n\t\t\t\t\t\tid=\"expense\"\n\t\t\t\t\t\tchecked={values.transactionType === \"expense\"}\n\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<RadioLabel htmlFor=\"expense\">\n\t\t\t\t\t\tExpense\n\t\t\t\t\t</RadioLabel>\n\n\t\t\t\t\t<FormRadio\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"transactionType\"\n\t\t\t\t\t\tvalue=\"transfer\"\n\t\t\t\t\t\tid=\"transfer\"\n\t\t\t\t\t\tchecked={values.transactionType === \"transfer\"}\n\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<RadioLabel htmlFor=\"transfer\">\n\t\t\t\t\t\tTransfer\n\t\t\t\t\t</RadioLabel>\n\t\t\t\t</TransTypeContainer>\n\n\t\t\t\t<TransInputContainer>\n\t\t\t\t\t{/* Transaction information */}\n\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t<FormLabel htmlFor=\"transactionDate\">\n\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tname=\"transactionDate\"\n\t\t\t\t\t\t\tid=\"transactionDate\"\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\tvalue={moment(values.transactionDate).format(\"YYYY-MM-DD\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexContainer>\n\n\t\t\t\t\t{/* For Income and Expense transaction types */}\n\t\t\t\t\t{values.transactionType !== \"transfer\" && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"fromAccount\">\n\t\t\t\t\t\t\t\t\tAccount\n\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<FormSelect\n\t\t\t\t\t\t\t\t\t\tvalue={values.fromAccount}\n\t\t\t\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\t\t\t\tname=\"fromAccount\"\n\t\t\t\t\t\t\t\t\t\tid=\"fromAccount\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t\t\t-- Select one --\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{accounts.map((item, key) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={item} key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</FormSelect>\n\t\t\t\t\t\t\t\t\t<Small type = \"error\">{errorMsgs.fromAccount}</Small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FlexContainer>\n\n\t\t\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"transactionCategory\">\n\t\t\t\t\t\t\t\t\tCategory\n\t\t\t\t\t\t\t\t</FormLabel>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<FormSelect\n\t\t\t\t\t\t\t\t\t\tvalue={values.transactionCategory}\n\t\t\t\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\t\t\t\tid=\"transactionCategory\"\n\t\t\t\t\t\t\t\t\t\tname=\"transactionCategory\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t\t\t-- Select one --\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{categories[values.transactionType].map((item, key) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={item} key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</FormSelect>\n\t\t\t\t\t\t\t\t\t<Small type = \"error\">\n\t\t\t\t\t\t\t\t\t\t{errorMsgs.transactionCategory}\n\t\t\t\t\t\t\t\t\t</Small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FlexContainer>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{/* For transfer transaction type */}\n\t\t\t\t\t{values.transactionType === \"transfer\" && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"fromAccount\">\n\t\t\t\t\t\t\t\t\tFrom\n\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<FormSelect\n\t\t\t\t\t\t\t\t\t\tvalue={values.fromAccount}\n\t\t\t\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\t\t\t\tname=\"fromAccount\"\n\t\t\t\t\t\t\t\t\t\tid=\"fromAccount\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t\t\t-- Select one --\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{accounts.map((item, key) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={item} key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</FormSelect>\n\t\t\t\t\t\t\t\t\t<Small type = \"error\">{errorMsgs.fromAccount}</Small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FlexContainer>\n\n\t\t\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"toAccount\">\n\t\t\t\t\t\t\t\t\tTo\n\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<FormSelect\n\t\t\t\t\t\t\t\t\t\tvalue={values.toAccount}\n\t\t\t\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\t\t\t\tname=\"toAccount\"\n\t\t\t\t\t\t\t\t\t\tid=\"toAccount\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value=\"\" disabled>\n\t\t\t\t\t\t\t\t\t\t\t-- Select one --\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t{accounts.map((item, key) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={item} key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</FormSelect>\n\t\t\t\t\t\t\t\t\t<Small type = \"error\">{errorMsgs.toAccount}</Small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</FlexContainer>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t<FormLabel htmlFor=\"transactionAmount\">\n\t\t\t\t\t\t\tAmount\n\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tname=\"transactionAmount\"\n\t\t\t\t\t\t\t\tid=\"transactionAmount\"\n\t\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t\t\tvalue={values.transactionAmount ? Math.abs(values.transactionAmount) : \"\"}\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\t\t\t\tonKeyDown={blockInvalidCharacter}\n\t\t\t\t\t\t\t\tstep = \"0.01\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Small type = \"error\">{errorMsgs.transactionAmount}</Small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FlexContainer>\n\n\t\t\t\t\t<FlexContainer justifySmall=\"space-between\">\n\t\t\t\t\t\t<FormLabel htmlFor=\"transactionNotes\">\n\t\t\t\t\t\t\tNotes\n\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"transactionNotes\"\n\t\t\t\t\t\t\tid=\"transactionNotes\"\n\t\t\t\t\t\t\tvalue={values.transactionNotes}\n\t\t\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexContainer>\n\t\t\t\t</TransInputContainer>\n\n\t\t\t\t<TransInputContainer>\n\t\t\t\t\t<FlexContainer>\n\t\t\t\t\t\t<FormButton type=\"submit\" value=\"save\">\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</FormButton>\n\t\t\t\t\t\t{mode === \"edit\" && (\n\t\t\t\t\t\t\t<FormButton\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={handleDeleteTransaction}\n\t\t\t\t\t\t\t\tvalue=\"delete\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</FormButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<FormButton type=\"button\" onClick={cancelSubmit}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</FormButton>\n\t\t\t\t\t</FlexContainer>\n\t\t\t\t</TransInputContainer>\n\t\t\t</form>\n\t\t</ModalContainer>\n\t);\n}\n\nexport default Form;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Form from \"./Form\";\n\nfunction AddEntry(props) {\n\tconst {\n\t\taccounts,\n\t\tcategories,\n\t\thandleAddTransaction,\n\t\tmode,\n\t\thideForm,\n\t\tclickedTransData,\n\t\thandleEditTransaction,\n\t\thandleDeleteTransaction,\n\t} = props;\n\tconst initialState = {\n\t\tid: \"\",\n\t\ttransactionType: \"income\",\n\t\ttransactionDate: new Date(),\n\t\tfromAccount: \"\",\n\t\ttoAccount: \"\",\n\t\ttransactionCategory: \"\",\n\t\ttransactionAmount: 0,\n\t\ttransactionNotes: \"\",\n\t};\n\tconst [values, setValues] = useState(mode === \"add\" ? initialState : clickedTransData);\n\tconst [errorMsgs, setErrorMsgs] = useState({\n\t\tfromAccount: \"\",\n\t\ttoAccount: \"\",\n\t\ttransactionCategory: \"\",\n\t\ttransactionAmount: \"\",\n\t});\n\n\tconst first = useRef(true);\n\tuseEffect(() => {\n\t\t// Whenever we switch between transaction types, always reset transactionCategory\n\t\tif (first.current) {\n\t\t\tfirst.current = false;\n\t\t\treturn;\n\t\t}\n\t\tsetValues((prevValues) => ({ ...prevValues, transactionCategory: \"\" }));\n\t}, [values.transactionType]);\n\n\t// Block invalid characters in number input field\n\tconst blockInvalidCharacter = (event) => {\n\t\t[\"e\", \"E\", \"+\", \"-\"].includes(event.key) && event.preventDefault();\n\t};\n\n\tconst handleValidation = () => {\n\t\tlet isFormValid = true;\n\t\tconst message = \"Required Field\";\n\n\t\tif (values.fromAccount === \"\") {\n\t\t\tisFormValid = false;\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, fromAccount: message }));\n\t\t} else {\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, fromAccount: \"\" }));\n\t\t}\n\n\t\tif (values.transactionType === \"transfer\" && values.toAccount === \"\") {\n\t\t\tisFormValid = false;\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, toAccount: message }));\n\t\t} else {\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, toAccount: \"\" }));\n\t\t}\n\n\t\tif (values.transactionType !== \"transfer\" && values.transactionCategory === \"\") {\n\t\t\tisFormValid = false;\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, transactionCategory: message }));\n\t\t} else {\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, transactionCategory: \"\" }));\n\t\t}\n\n\t\tif (values.transactionAmount === 0) {\n\t\t\tisFormValid = false;\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, transactionAmount: message }));\n\t\t} else {\n\t\t\tsetErrorMsgs((prevState) => ({ ...prevState, transactionAmount: \"\" }));\n\t\t}\n\t\treturn isFormValid;\n\t};\n\n\tconst handleValueChange = (event) => {\n\t\tlet { name, value } = event.target;\n\t\tif (name === \"transactionDate\") {\n\t\t\tvalue = new Date(value);\n\t\t}\n\t\tsetValues({ ...values, [name]: value });\n\t};\n\n\tconst clearInputs = () => {\n\t\tsetValues(initialState);\n\t};\n\n\tconst generateId = () => Date.now() + Math.random();\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (handleValidation()) {\n\t\t\tif (values.transactionType === \"expense\") {\n\t\t\t\tvalues.transactionAmount *= -1;\n\t\t\t}\n\t\t\tvalues.id = generateId();\n\t\t\tmode === \"edit\" ? handleEditTransaction(values) : handleAddTransaction(values);\n\n\t\t\tclearInputs();\n\t\t\thideForm();\n\t\t}\n\t};\n\n\tconst cancelSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tclearInputs();\n\t\thideForm();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\taccounts={accounts}\n\t\t\tcategories={categories}\n\t\t\terrorMsgs={errorMsgs}\n\t\t\tvalues={values}\n\t\t\tmode={mode}\n\t\t\thandleSubmit={handleSubmit}\n\t\t\tcancelSubmit={cancelSubmit}\n\t\t\thandleValueChange={handleValueChange}\n\t\t\thandleDeleteTransaction={handleDeleteTransaction}\n\t\t\tblockInvalidCharacter={blockInvalidCharacter}\n\t\t/>\n\t);\n}\n\nexport default AddEntry;\n","// * CONTAINS ALL CALCULATION FUNCTIONS\n\nimport numeral from \"numeral\";\n\n// Compute the total value of a filtered array\nconst filter = (arr, criteria) => {\n    return arr.filter(function (obj) {\n        return Object.keys(criteria).every(function (c) {\n            return obj[c] === criteria[c];\n        });\n    });\n};\n\nconst calcTotalOfFiltered = (arr, criteria, criteriaContent, amount) => {\n    return filter(arr, { [criteria]: criteriaContent }).reduce((a, b) => a + Number(b[amount]), 0);\n};\n\n// Calculate all values from fromAccount\nconst calcFromAccount = (arr, criteria, criteriaContent, amount) => {\n    let array = [...arr];\n    array = filter(array, { [criteria]: criteriaContent });\n\n    let total = 0;\n    for (let element of array) {\n        if (element.transactionType === \"transfer\") {\n            total -= Number(element[amount]);\n        } else {\n            total += Number(element[amount]);\n        }\n    }\n    return total;\n};\n\n// * For formatting\n\n// Use on values with calculated totals\nconst totalValueFormat = (value, signed) => {\n    let toFormat = signed ? value : Math.abs(value);\n    return value\n        ?  (Math.abs(value)) > 999999\n            ? numeral(toFormat).format(\"0.0a\")\n            : numeral(toFormat).format(\"0,0.00\")\n        : numeral(0).format(\"0,0.00\");\n};\n\nconst singleValueFormat = (value, signed) => {\n    let toFormat = signed ? value : Math.abs(value);\n    return numeral(toFormat).format(\"0,0.00\");\n};\n\n// * For transactions\n\n// Calculate the total transaction amount of income and expense per day and per month\nconst computeTransAmounts = (data) => {\n    let modifiedData = data;\n\n    const computeMonthlyTotal = (items, amount) => {\n        return items.reduce((a, b) => a + b[amount], 0);\n    };\n\n    for (let month of modifiedData) {\n        for (let days of month.dailyTrans) {\n            days.dayIncomeTotal = calcTotalOfFiltered(\n                days.transactions,\n                \"transactionType\",\n                \"income\",\n                \"transactionAmount\"\n            );\n            days.dayExpenseTotal = calcTotalOfFiltered(\n                days.transactions,\n                \"transactionType\",\n                \"expense\",\n                \"transactionAmount\"\n            );\n\n            // Expense is already negative\n            days.dayTotal = days.dayIncomeTotal + days.dayExpenseTotal;\n        }\n        month.monthIncomeTotal = computeMonthlyTotal(month.dailyTrans, \"dayIncomeTotal\");\n        month.monthExpenseTotal = computeMonthlyTotal(month.dailyTrans, \"dayExpenseTotal\");\n\n        // Expense is already negative\n        month.monthTotal = month.monthIncomeTotal + month.monthExpenseTotal;\n    }\n\n    return modifiedData;\n};\n\n// * For sidebar-accounts\n\n// Calculate total assets\nconst computeAssets = (item) => {\n    return item.filter(({ value }) => value > 0).reduce((a, b) => a + b.value, 0);\n};\n\n// Calculate total liabilities\nconst computeLiabilities = (item) => {\n    return item.filter(({ value }) => value < 0).reduce((a, b) => a + b.value, 0);\n};\n\nexport {\n    calcTotalOfFiltered,\n    filter,\n    calcFromAccount,\n    computeAssets,\n    computeLiabilities,\n    computeTransAmounts,\n    totalValueFormat,\n    singleValueFormat,\n};\n","import styled from \"styled-components\";\nimport { handleColorTransType } from \"../../../../styled-components/ThemeColors.styled\";\n\nexport const LargeNumberContainer = styled.div`\n\tflex: 1;\n\ttext-align: center;\n\n\tp:nth-child(2) {\n\t\tcolor: ${({ type, theme }) => handleColorTransType(type, theme) || theme.text};\n\t}\n`;","import React from \"react\";\nimport { totalValueFormat } from \"../../../../helpers/calc\";\n\n// Styled Components\nimport { FlexContainerBordered } from \"../../../../styled-components/Default.styled\";\nimport { LargeNumberContainer } from \"./Totals.styled\";\nimport { Light, Main } from \"../../../../styled-components/Text.styled\";\n\nfunction Totals(props) {\n    const { dataAsset, dataExpense, dataTotal, heading } = props;\n    return (\n        <FlexContainerBordered justify='space-around'>\n            <LargeNumberContainer type='income'>\n                <Light>{heading[0]}</Light>\n                <Main>{totalValueFormat(dataAsset)}</Main>\n            </LargeNumberContainer>\n\n            <LargeNumberContainer type='expense'>\n                <Light>Expense</Light>\n                <Main>{totalValueFormat(dataExpense)}</Main>\n            </LargeNumberContainer>\n\n            <LargeNumberContainer type='total' amount={dataTotal}>\n                <Light>Total</Light>\n                <Main>{totalValueFormat(dataTotal, true)}</Main>\n            </LargeNumberContainer>\n        </FlexContainerBordered>\n    );\n}\n\nexport default Totals;\n","import styled from \"styled-components\";\nimport { FlexContainer } from '../../../../styled-components/Default.styled';\n\nexport const DatePickerContainer = styled(FlexContainer) `\n    button:nth-child(1) {\n        margin: 0 1em 0 0;\n    }\n\n    button:nth-child(3) {\n        margin: 0 0 0 1em;\n    }\n\n`\n\nexport const ArrowButton = styled.button`\n    color: ${({ theme }) => theme.text};\n\n    &:hover, &:focus, &:active {\n        box-shadow: none;\n    }\n    \n    i {\n        font-size: 14px; \n\n        @media screen and (min-width: 1024px) {\n        font-size: 36px;\n        }\n    }\n`;","import React from \"react\";\nimport moment from \"moment\";\n\n// Styled Components\nimport { ArrowButton, DatePickerContainer } from './DatePicker.styled';\nimport { Large } from '../../../../styled-components/Text.styled';\n\n\nfunction DatePicker(props) {\n    const {moveToNextMonth, moveToPreviousMonth, dataToRender} = props;\n\n    return (\n        <DatePickerContainer>\n            <ArrowButton type='button' onClick={moveToPreviousMonth}>\n                <i className='fa-solid fa-angle-left'></i>\n            </ArrowButton>\n\n            <Large>\n                {typeof dataToRender.month !== \"string\" ? moment.monthsShort(dataToRender.month) : dataToRender.month}\n                {\"  \"}\n                {dataToRender.year}\n            </Large>\n\n            <ArrowButton type='button' onClick={moveToNextMonth}>\n                <i className='fa-solid fa-angle-right'></i>\n            </ArrowButton>\n        </DatePickerContainer>\n    );\n}\n\nexport default DatePicker;\n","import styled from \"styled-components\";\nimport { generalColors } from \"../../../../styled-components/ThemeColors.styled\";\n\n/*  ========== Containers ========== */\nexport const TransactionOutput = styled.div`\n\tpadding-bottom: 5em;\n`;\n\nexport const DailyTransactionData = styled.div`\n\tmargin: 0 0 1em 0;\n\tborder-top: 0.1px solid ${generalColors.grey};\n\tborder-bottom: 0.1px solid ${generalColors.grey};\n\tbackground: ${({ theme }) => theme.textBg};\n`;\n\nexport const GridContainerHead = styled.div`\n\tdisplay: grid;\n\tgrid-auto-columns: 1fr;\n\tgrid-template-columns: 2fr 1fr 1fr;\n\tgrid-template-rows: 1fr;\n\tgrid-gap: 0.5em;\n\talign-items: center;\n\tpadding: 0.25em 7vw;\n\tborder-bottom: 0.5px solid ${generalColors.grey};\n\n\t& p {\n\t\tdisplay: inline;\n\t}\n\n\tp:nth-child(3) {\n\t\ttext-align: right;\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\tpadding: 0.5em 7vw;\n\t}\n`;\n\nexport const NoDataContainer = styled.div`\n\tdisplay: flex;\n\tflex-flow: column;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 50vh;\n`;\n\nexport const DayContainer = styled.div`\n\tdisplay: inline-block;\n\twidth: 2em;\n\tborder-radius: 5px;\n\tmargin-left: 0.5em;\n\tpadding: 0.05em 0.25em 0.25em 0.25em;\n\ttext-align: center;\n\tbackground-color: ${({day}) => {\n\t\tswitch(day) {\n\t\t\tcase \"Sun\":\n\t\t\t\treturn generalColors.red;\n\t\t\tcase \"Sat\":\n\t\t\t\treturn generalColors.blue;\n\t\t\tdefault:\n\t\t\t\treturn generalColors.grey;\n\t\t}\n\t}};\n\n\tp {\n\t\tcolor: ${generalColors.white};\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\twidth: 2.5em;\n\t\tpadding: 0.4em 0.5em 0.5em 0.5em;\n\t}\t\n`;\n\n/*  ========== Buttons ========== */\nexport const NewButton = styled.button`\n\tdisplay: none;\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: block;\n\t\tpadding: 0.5em .75em;\n\t\tborder-radius: 5px;\n\t\tbackground-color: ${generalColors.red};\n\t\tfont-size: 12px;\n\t\tcolor: ${generalColors.white};\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\tborder-radius: 10px;\n\t\tfont-size: 20px;\n\t}\n\n`;\n\nexport const NewButtonMobile = styled.button`\n\tposition: fixed;\n\tbottom: 3em;\n\tright: 0.7em;\n\tpadding: 0.5em 0.8em;\n\tborder-radius: 50%;\n\tfont-size: 20px;\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\tbackground-color: ${generalColors.red};\n\tcolor: ${generalColors.white};\n\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: none;\n\t}\n`\n\nexport const TransactionDetails = styled.button`\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 2fr 1fr;\n\tgrid-template-rows: 1fr;\n\tgrid-gap: 1em;\n\talign-items: center;\n\twidth: 100%;\n\tpadding: 0.5em 7vw;\n\t\n\t&:hover, &:focus, &:active {\n\t\tbox-shadow: none;\n\t}\n\n\tp {\n\t\ttext-align: left;\n\t}\n\n\tp:nth-child(3) {\n\t\ttext-align: right;\n\t\tcolor: ${({ theme, amount }) => {\n\t\t\tif (amount && amount > 0) {\n\t\t\t\treturn generalColors.blue;\n\t\t\t} else if (amount && amount < 0) {\n\t\t\t\treturn generalColors.red;\n\t\t\t} else {\n\t\t\t\treturn theme.text;\n\t\t\t}\n\t\t}};\n\t}\n`;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Totals from \"../Totals/Totals\";\nimport DatePicker from \"../DatePicker/DatePicker\";\nimport { totalValueFormat, singleValueFormat } from \"../../../../helpers/calc\";\n\n// Styled Components\nimport {\n\tNewButton,\n\tNewButtonMobile,\n\tTransactionDetails,\n\tTransactionOutput,\n\tGridContainerHead,\n\tNoDataContainer,\n\tDailyTransactionData,\n\tDayContainer\n} from \"./TransactionOutput.styled\";\nimport {\n\tMain,\n\tBold,\n\tSmall,\n\tOverflowingText\n} from \"../../../../styled-components/Text.styled\";\nimport {\n\tScrollingContainer,\n\tFixedContainer,\n\tFlexHeader,\n} from \"../../../../styled-components/Default.styled\";\n\nfunction Transaction(props) {\n\tconst {\n\t\tgetTransactionId,\n\t\tmoveToNextMonth,\n\t\tmoveToPreviousMonth,\n\t\tdataToRender,\n\t\tsetToAddForm,\n\t} = props;\n\n\treturn (\n\t\t<TransactionOutput>\n\t\t\t<FixedContainer>\n\t\t\t\t<FlexHeader justifySmall=\"space-between\">\n\t\t\t\t\t<DatePicker \n\t\t\t\t\t\tmoveToNextMonth = {moveToNextMonth}\n\t\t\t\t\t\tmoveToPreviousMonth = {moveToPreviousMonth}\n\t\t\t\t\t\tdataToRender = {dataToRender}\n\t\t\t\t\t/>\n\t\t\t\t\t<NewButton type=\"button\" onClick={setToAddForm}>\n\t\t\t\t\t\tNew | +\n\t\t\t\t\t</NewButton>\n\t\t\t\t</FlexHeader>\n\n\t\t\t\t<Totals dataAsset = {dataToRender.monthIncomeTotal}\n\t\t\t\t\t\tdataExpense = {dataToRender.monthExpenseTotal}\n\t\t\t\t\t\tdataTotal = {dataToRender.monthTotal}\n\t\t\t\t\t\theading = {['Income', 'Expense', 'Total']}\n\t\t\t\t/>\n\t\t\t</FixedContainer>\n\n\t\t\t{!dataToRender.hasOwnProperty(\"dailyTrans\") ? (\n\t\t\t\t<NoDataContainer>\n\t\t\t\t\t<Main type = \"transData\">No Data Available</Main>\n\t\t\t\t</NoDataContainer>\n\t\t\t) : (\n\t\t\t\t<ScrollingContainer>\n\t\t\t\t\t{dataToRender.dailyTrans.map((subItem, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<DailyTransactionData key={key}>\n\t\t\t\t\t\t\t\t<GridContainerHead>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Bold>\n\t\t\t\t\t\t\t\t\t\t\t{moment(subItem.day).format(\"DD\")}\n\t\t\t\t\t\t\t\t\t\t</Bold>\n\t\t\t\t\t\t\t\t\t\t<DayContainer day = {moment(subItem.day).format(\"ddd\")}>\n\t\t\t\t\t\t\t\t\t\t\t<Small>{moment(subItem.day).format(\"ddd\")}</Small>\n\t\t\t\t\t\t\t\t\t\t</DayContainer>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<Main type=\"income\">\n\t\t\t\t\t\t\t\t\t\t{totalValueFormat(subItem.dayIncomeTotal)}\n\t\t\t\t\t\t\t\t\t</Main>\n\t\t\t\t\t\t\t\t\t<Main type=\"expense\">\n\t\t\t\t\t\t\t\t\t\t{totalValueFormat(subItem.dayExpenseTotal)}\n\t\t\t\t\t\t\t\t\t</Main>\n\t\t\t\t\t\t\t\t</GridContainerHead>\n\n\t\t\t\t\t\t\t\t{subItem.transactions.map((value, key) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TransactionDetails\n\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\tonClick={getTransactionId}\n\t\t\t\t\t\t\t\t\t\t\tdata-id={value.id}\n\t\t\t\t\t\t\t\t\t\t\tamount={value.transactionAmount}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{value.transactionType === \"transfer\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<Main type = \"transData\">Transfer</Main>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<OverflowingText type = \"transData\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value.transactionCategory}\n\t\t\t\t\t\t\t\t\t\t\t\t</OverflowingText>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<Main>{value.transactionNotes}</Main>\n\t\t\t\t\t\t\t\t\t\t\t\t{value.transactionType === \"transfer\" ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OverflowingText type = \"transData\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{value.fromAccount} <>&rarr;</>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{value.toAccount}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</OverflowingText>\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Main type = \"transData\">{value.fromAccount}</Main>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t<Main>\n\t\t\t\t\t\t\t\t\t\t\t\t{singleValueFormat(value.transactionAmount)}\n\t\t\t\t\t\t\t\t\t\t\t</Main>\n\t\t\t\t\t\t\t\t\t\t</TransactionDetails>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</DailyTransactionData>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ScrollingContainer>\n\t\t\t)}\n\n\t\t\t<NewButtonMobile onClick={setToAddForm}>+</NewButtonMobile>\n\t\t</TransactionOutput>\n\t);\n}\nexport default Transaction;\n","import { income, expense } from \"../../../../styled-components/ThemeColors.styled\";\n\nconst createData = (data, colorType) => {\n\tconst values = data.map((item) => item.value);\n\tlet total = values.reduce((a, v) => a + v);\n\tlet inPercent = values.map((value) => Math.max((value / total) * 100, 1));\n\n\treturn {\n\t\tlabels: data.map((item) => item.categoryName),\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tdata: inPercent,\n\t\t\t\tbackgroundColor: colorType === \"income\" ? income : expense,\n\t\t\t\tborderWidth: 0.5,\n\t\t\t},\n\t\t],\n\t};\n};\n\nconst customization = (data) => {\n\tconst dataValue = data.map((item) => item.value);\n\tconst dataLabel = data.map((item) => item.categoryName);\n\treturn {\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false,\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {\n\t\t\t\t\tlabel: function (tooltipItem) {\n\t\t\t\t\t\tlet value = dataValue[tooltipItem.dataIndex];\n\t\t\t\t\t\tlet label = dataLabel[tooltipItem.dataIndex];\n\t\t\t\t\t\treturn `${label}: ${value}`;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tlayout: {\n\t\t\tpadding: 50,\n\t\t},\n\t};\n};\n\nexport { createData, customization };\n","import styled, {css} from \"styled-components\";\nimport { FlexContainer, ScrollingContainer } from \"../../../../styled-components/Default.styled\";\nimport { generalColors, income, expense } from \"../../../../styled-components/ThemeColors.styled\";\nimport { DayContainer } from \"../TransactionOutput/TransactionOutput.styled\";\n\nexport const MobileScrollingContainer = styled(ScrollingContainer)`\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const DesktopScrollingContainer = styled(ScrollingContainer)`\n\tdisplay: none;\n\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: block;\n\t}\n`;\n\nexport const StatsFlexContainer = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tgap: 1em;\n`;\n\nexport const DataContainer = styled.div`\n\tmin-height: 30vh;\n\toverflow: hidden;\n\tbackground: ${({theme}) => theme.textBg};\n\tmargin-bottom: 5em;\n\n\tp {\n\t\tdisplay: inline-block;\n\t}\n\t\n\t& > p {\n\t\tdisplay: block;\n\t\tmargin: 5em;\n\t\ttext-align: center;\n\t\tcolor: ${generalColors.grey};\n\t}\n\n\t@media screen and (min-width:1024px) {\n\t\theight: inherit;\n\t\twidth: 100%;\n\t\tmargin: -1px 0 0 -1px;\n\t\tborder: 0.5px solid ${generalColors.grey};\n\t}\n`;\n\nexport const DataContainerHeading = styled.div`\n\tdisplay: none;\n\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: block;\n\t\tmargin-top: 2em;\n\t\ttext-align: center;\n\t}\n`\n\nexport const PieContainer = styled.div`\n\twidth: 100%;\n\tpadding: 4vw 16vw;\n\n\t@media screen and (min-width:1024px) {\n\t\tpadding: 1em 5vw;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tpadding: 1em 10vw;\n\t}\n\n`;\n\nexport const RadioContainer = styled(FlexContainer)` \n\tpadding: 1em 0 0.5em 0;\n\tborder-bottom: 3px solid ${generalColors.red};\n\tposition: relative;\n\tlabel {\n\t\tcursor: pointer;\n\t}\n\t&:after {\n\t\tposition: absolute;\n\t\tbottom: -5px;\n\t\theight: 5.1px;\n\t\twidth: 50%;\n\t\t${({ selection }) =>\n\t\t\tselection === \"income\"\n\t\t\t\t? css`\n\t\t\t\t\t\tright: 0;\n\t\t\t\t  `\n\t\t\t\t: css`\n\t\t\t\t\t\tleft: 0;\n\t\t\t\t  `};\n\t\tcontent: \"\";\n\t\tbackground-color: ${({ theme }) => theme.textBg};\n\t}\n\n\t@media screen and (min-width: 1024px) {\n\t\tdisplay: none;\n\t}\n`\nexport const PercentContainer = styled(DayContainer)`\n\tmargin: 0 1em 0 0;\n\tcolor: ${generalColors.white};\n\tbackground-color: ${({index, type}) => \n\t\ttype === \"income\" ? income[index] : expense[index]\n\t};\n\n\t@media screen and (min-width: 1024px) {\n\t\twidth: 3.5em;\n\t}\n`;\n\nexport const StatsRadio = styled.input`\n\tdisplay: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\t-ms-appearance: none;\n\t-o-appearance: none;\n\tappearance: none;\n`","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Pie } from \"react-chartjs-2\";\nimport { createData, customization } from \"./chartSettings\";\n\n// Styled Components\nimport { FlexContainerBordered } from \"../../../../styled-components/Default.styled\";\nimport { DataContainer, PercentContainer, PieContainer, DataContainerHeading } from \"./Stats.styled\";\nimport { Main, Small, Bold } from \"../../../../styled-components/Text.styled\";\n\nfunction DataToShow(props) {\n    const {data, type} = props;\n    return(\n        <DataContainer>\n            <DataContainerHeading>\n                {type === \"income\" ? (\n                    <Bold>Income</Bold>\n                ):\n                    (<Bold>Expense</Bold>)}\n            </DataContainerHeading>\n            {data.length === 0 ? (\n                <Main>No available data</Main>\n            ) : (\n                <PieContainer>\n                    <Pie\n                        data={createData(data, type)}\n                        options={customization(data)}\n                    />\n                </PieContainer>\n            )}\n            {data.map((item, key) => {\n                return (\n                    <FlexContainerBordered key={key} justifySmall='space-between'>\n                        <div>\n                            <PercentContainer index={key} type={type}>\n                                <Small>{item.percent}</Small>\n                            </PercentContainer>\n                            <Main>{item.categoryName}</Main>\n                        </div>\n                        <Main>{numeral(item.value).format(\"0,0.00\")}</Main>\n                    </FlexContainerBordered>\n                );\n            })}\n        </DataContainer>\n    )\n};\n\nexport default DataToShow;","import moment from \"moment\";\nimport numeral from \"numeral\";\nimport { computeTransAmounts, filter, calcTotalOfFiltered } from \"./calc\";\nimport { sortByDate, sortByCategory, sortByValue } from \"./sort\";\n\nconst processData = (transaction) => {\n\t/*\n\tReturn an object that looks like\n\t[\n        {\n            month: ___\n\t\t\tmonthIncomeTotal: ___\n\t\t\tmonthExpenseTotal: ___\n\t\t\tmonthTotal: ___\n            dailyTrans: [\n                {\n                    day: ___\n                    transactions: []\n\t\t\t\t\tdayIncomeTotal: ___\n\t\t\t\t\tdayExpenseTotal: ___\n\t\t\t\t\tdayTotal: ___\n                }\n            ]\n        }\n       ]\n\t\n\t*/\n\tlet sortedData = transaction;\n\tsortedData = sortByDate(sortedData);\n\tconst groupedData = groupByDate(sortedData);\n\tconst finalizedData = computeTransAmounts(groupedData);\n\treturn finalizedData;\n};\n\nconst groupByDate = (data) => {\n\t/* Process the sorted data such that transactions will be grouped according to month, and then to each day\n       Desired output:\n       [\n        {\n            month: ___\n            dailyTrans: [\n                {\n                    day: ___\n                    transactions: []\n                }\n            ]\n        }\n       ]\n    */\n\tconst formatTime = (date) => moment(date).format(\"LL\");\n\tconst getMonth = (date) => moment(date).format(\"MMM\");\n\tconst getYear = (date) => moment(date).format(\"YYYY\");\n\n\tlet modifiedData = [];\n\tdata.forEach((item) => {\n\t\tconst selectedDate = formatTime(item.transactionDate);\n\t\tconst selectedDateMonth = getMonth(item.transactionDate);\n\t\tconst selectedDateYear = getYear(item.transactionDate);\n\n\t\t// Create a new month and year if it doesn't exists yet\n\t\tif (\n\t\t\t!modifiedData.some((item) => item.month === selectedDateMonth) ||\n\t\t\t!modifiedData.some((item) => item.year === selectedDateYear)\n\t\t) {\n\t\t\tmodifiedData.push({\n\t\t\t\tmonth: selectedDateMonth,\n\t\t\t\tyear: selectedDateYear,\n\t\t\t\tdailyTrans: [],\n\t\t\t\tmonthIncomeTotal: 0,\n\t\t\t\tmonthExpenseTotal: 0,\n\t\t\t});\n\t\t}\n\n\t\tconst indexMonth = modifiedData.findIndex(\n\t\t\t(item) => item.month === selectedDateMonth && item.year === selectedDateYear\n\t\t);\n\n\t\t// Create a new day for a month if it doesn't exists yet\n\t\tif (!modifiedData[indexMonth].dailyTrans.some((item) => item.day === selectedDate)) {\n\t\t\tmodifiedData[indexMonth].dailyTrans.push({\n\t\t\t\tday: selectedDate,\n\t\t\t\ttransactions: [],\n\t\t\t\tdayIncomeTotal: 0,\n\t\t\t\tdayExpenseTotal: 0,\n\t\t\t});\n\t\t}\n\n\t\tconst indexDay = modifiedData[indexMonth].dailyTrans.findIndex(\n\t\t\t(item) => item.day === selectedDate\n\t\t);\n\t\tmodifiedData[indexMonth].dailyTrans[indexDay].transactions.push(item);\n\t});\n\n\treturn modifiedData;\n};\n\nconst groupByCategory = (data, type, date, total) => {\n\t/*\n\t\tDesired output\n\t\t[\n\t\t\t{\n\t\t\t\tcategoryName: ___\n\t\t\t\ttotalAmount: ___\n\t\t\t\tpercent: ___\n\t\t\t},\n\t\t\t...\n\t\t]\n\t*/\n\n\tlet groupedData = [];\n\n\tconst filteredByDate = data.filter((item) => {\n\t\tconst month = moment(item.transactionDate).month();\n\t\tconst year = moment(item.transactionDate).year();\n\t\treturn date.month === month && date.year === year;\n\t});\n\n\tif (filteredByDate.length !== 0) {\n\t\t// Filter and sort according to type\n\t\tconst filteredData = sortByCategory(filter(filteredByDate, { transactionType: type }));\n\n\t\t// Get all categories and make it into an array. Remove duplicates too\n\t\tlet categoriesArray = [...new Set(filteredData.map((item) => item.transactionCategory))];\n\n\t\tfor (let element of categoriesArray) {\n\t\t\tlet category = {\n\t\t\t\tcategoryName: element,\n\t\t\t\tvalue: 0,\n\t\t\t\tpercent: 0,\n\t\t\t};\n\n\t\t\t// Calculate total amount of a category\n\t\t\t// Use Math.abs for correct calculation in pie chart\n\t\t\tcategory.value = Math.abs(\n\t\t\t\tcalcTotalOfFiltered(\n\t\t\t\t\tfilteredData,\n\t\t\t\t\t\"transactionCategory\",\n\t\t\t\t\telement,\n\t\t\t\t\t\"transactionAmount\"\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tconst toDivide = type === \"income\" ? total.monthIncomeTotal : total.monthExpenseTotal;\n\t\t\tcategory.percent = numeral(Math.abs(category.value/toDivide)).format('0%');\n\n\t\t\tif(category.percent === \"0%\") category.percent = \"1%\";\n\n\t\t\tgroupedData.push(category);\n\t\t}\n\t}\n\tgroupedData = sortByValue(groupedData);\n\treturn groupedData;\n};\n\nexport { processData, groupByCategory };\n","// * CONTAINS ALL SORT FUNCTIONS\n\n// Sort data with the most recent one on top\nconst sortByDate = (data) => {\n\treturn data.sort(\n\t\t(item1, item2) => item2.transactionDate.getTime() - item1.transactionDate.getTime()\n\t);\n};\n\n// Sort categories alphabetically\nconst sortByCategory = (dataToSort) => {\n\treturn dataToSort.sort((item1, item2) => {\n\t\tlet category1 = item1.transactionCategory.toUpperCase();\n\t\tlet category2 = item2.transactionCategory.toUpperCase();\n\t\treturn category1 < category2 ? -1 : category1 > category2 ? 1 : 0;\n\t});\n};\n\n// Sort by value\nconst sortByValue = (dataToSort) => {\n\treturn dataToSort.sort((item1, item2) => {\n\t\tlet category1 = item1.value;\n\t\tlet category2 = item2.value;\n\t\treturn category1 > category2 ? -1 : category1 > category2 ? 1 : 0;\n\t});\n};\n\nexport { sortByDate, sortByCategory, sortByValue };\n","import React, { useState, useEffect } from \"react\";\nimport DataToShow from \"./DataToShow\";\nimport DatePicker from \"../DatePicker/DatePicker\";\nimport { groupByCategory } from \"../../../../helpers/groupingData\";\n\n// Styled Components\nimport {\n    FixedContainer,\n    ScrollingContainer,\n    FlexHeader,\n    FlexContainer,\n} from \"../../../../styled-components/Default.styled\";\nimport { MobileScrollingContainer, RadioContainer, StatsRadio, StatsFlexContainer, DesktopScrollingContainer } from \"./Stats.styled\";\nimport { Bold } from \"../../../../styled-components/Text.styled\";\n\nfunction Stats(props) {\n    const { transaction, dateToRender, dataToRender, moveToNextMonth, moveToPreviousMonth } = props;\n    const [incomeCategories, setIncomeCategories] = useState([]);\n    const [expenseCategories, setExpenseCategories] = useState([]);\n\n    const [selection, setSelection] = useState(\"income\");\n\n    const handleSelection = (event) => {\n        let value = event.target.value;\n        setSelection(value);\n    };\n\n    useEffect(() => {\n        setIncomeCategories(groupByCategory(transaction, \"income\", dateToRender, dataToRender));\n        setExpenseCategories(groupByCategory(transaction, \"expense\", dateToRender, dataToRender));\n    }, [transaction, dateToRender, dataToRender]);\n\n    return (\n        <div>\n            <FixedContainer>\n                <FlexHeader>\n                    <DatePicker\n                        moveToNextMonth={moveToNextMonth}\n                        moveToPreviousMonth={moveToPreviousMonth}\n                        dataToRender={dataToRender}\n                    />\n                </FlexHeader>\n\n                {/* Mobile Mode */}\n                <RadioContainer selection={selection} justifySmall='space-around'>\n                    <StatsRadio\n                        type='radio'\n                        name='statsSelection'\n                        value='income'\n                        checked={selection === \"income\"}\n                        onChange={handleSelection}\n                        id='income'\n                    />\n\n                    <Bold htmlFor='income' as='label'>\n                        Income\n                    </Bold>\n\n                    <StatsRadio\n                        type='radio'\n                        name='statsSelection'\n                        value='expense'\n                        checked={selection === \"expense\"}\n                        onChange={handleSelection}\n                        id='expense'\n                    />\n\n                    <Bold htmlFor='expense' as='label'>\n                        Expense\n                    </Bold>\n                </RadioContainer>\n            </FixedContainer>\n\n            {/* Mobile Mode */}\n            <MobileScrollingContainer>\n                {selection === \"income\" && (\n                    <DataToShow data = {incomeCategories} type = \"income\"/>\n                )}\n\n                {selection === \"expense\" && (\n                    <DataToShow data = {expenseCategories} type = \"expense\"/>\n                )}\n            </MobileScrollingContainer>\n\n            {/* Desktop Mode */}\n            <DesktopScrollingContainer>\n                    <StatsFlexContainer>\n                        <DataToShow data = {incomeCategories} type = \"income\"/>\n                        <DataToShow data = {expenseCategories} type = \"expense\"/>\n                    </StatsFlexContainer>\n            </DesktopScrollingContainer>\n        </div>\n    );\n}\n\nexport default Stats;\n","import styled from \"styled-components\";\nimport { FlexContainerBordered } from \"../../../../styled-components/Default.styled\";\nimport { generalColors } from \"../../../../styled-components/ThemeColors.styled\";\n\nexport const AccountContainer = styled(FlexContainerBordered)`\n\tjustify-content: space-between;\n\tmargin: 0.5em 0;\n\tpadding: 0.75em 7vw;\n\n\tp:nth-child(2) {\n\t\tcolor: ${({ value }) => (value < 0 ? generalColors.red : generalColors.blue)};\n\t}\n`;\n","import React from \"react\";\nimport { singleValueFormat } from \"../../../../helpers/calc\";\nimport Totals from \"../Totals/Totals\";\n\n// Styled Components\nimport { ScrollingContainer, FlexHeader, FixedContainer } from \"../../../../styled-components/Default.styled\";\nimport { AccountContainer } from \"./Accounts.styled\";\nimport { Main, Large } from \"../../../../styled-components/Text.styled\";\n\nfunction SidebarAccounts(props) {\n    const { accountsInfo, getAccounts, initialState } = props;\n\n    return (\n        <div>\n            <FixedContainer>\n                <FlexHeader>\n                    <Large>Accounts</Large>\n                </FlexHeader>\n                <Totals\n                    dataAsset={accountsInfo.totalAssets}\n                    dataExpense={accountsInfo.totalLiabilities}\n                    dataTotal={accountsInfo.totalAssets + accountsInfo.totalLiabilities}\n                    heading={[\"Assets\", \"Liabilities\", \"Total\"]}\n                />\n            </FixedContainer>\n\n            <ScrollingContainer>\n                {(accountsInfo !== initialState ? accountsInfo : getAccounts()).items.map((item, key) => {\n                    return (\n                        <AccountContainer key={key} value = {item.value}>\n                            <Main>{item.accountName}</Main>\n                            <p>{singleValueFormat(item.value, false)}</p>\n                        </AccountContainer>\n                    );\n                })}\n            </ScrollingContainer>\n        </div>\n    );\n}\n\nexport default SidebarAccounts;\n","import styled from \"styled-components\";\nimport { generalColors } from \"../../../../../styled-components/ThemeColors.styled\";\n\nexport const Slider = styled.span`\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: 23px;\n\ttransition: 0.3s;\n\n\t&::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 3px;\n\t\tleft: 5px;\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tborder-radius: 23px;\n\t\tbox-shadow: none;\n\t\tbackground-color: ${generalColors.white};\n\t\ttransition: 0.3s;\n\t}\n`;\n\nexport const ThemeTogglerContainer = styled.div`\n\twidth: 50px;\n\theight: 23px;\n\tposition: relative;\n\n\tlabel {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: ${({ theme }) => theme.themeTogglerBg};\n\t\tborder: 1px solid ${generalColors.grey};\n\t\tborder-radius: 23px;\n\t\tcursor: pointer;\n\t}\n\n\tinput {\n\t\tdisplay: none;\n\t}\n\n\tinput:checked ~ ${Slider} {\n\t\tbackground-color: ${({ theme }) => theme.themeTogglerBg};\n\t}\n\n\tinput:checked ~ ${Slider}::before {\n\t\ttransform: translateX(23px);\n\t\tbackground-color: ${({ theme }) => theme.themeTogglerBg};\n\t\tbox-shadow: inset 6px -5px 0px 0px ${generalColors.white};\n\t}\n`;\n","import React from \"react\";\nimport { ThemeTogglerContainer, Slider } from \"./ThemeToggler.styled\";\n\nfunction ThemeToggler(props) {\n    const { handleDarkMode, isDarkMode } = props;\n    return (\n        <ThemeTogglerContainer>\n            <label>\n                <input type='checkbox' onChange={handleDarkMode} checked={isDarkMode}></input>\n                <Slider />\n            </label>\n        </ThemeTogglerContainer>\n    );\n}\n\nexport default ThemeToggler;\n","import styled from \"styled-components\";\nimport { FlexContainerBordered } from \"../../../../styled-components/Default.styled\";\n\nexport const OptionContainer = styled(FlexContainerBordered)`\n    padding: 0.75em 7vw;\n\n    @media screen and (min-width: 1024px) {\n        padding: 1em 7vw;\n    }\n`","import React from \"react\";\nimport ThemeToggler from \"./ThemeToggler/ThemeToggler\";\n\n// Styled Components\nimport { FixedContainer, FlexHeader } from \"../../../../styled-components/Default.styled\";\nimport { OptionContainer } from \"./Settings.styled\";\nimport { Large, Main }  from \"../../../../styled-components/Text.styled\";\n\nfunction Settings(props) {\n    const { handleDarkMode, isDarkMode } = props;\n    return (\n        <div>\n            <FixedContainer>\n                <FlexHeader>\n                    <Large>Settings</Large>\n                </FlexHeader>\n            </FixedContainer>\n            <OptionContainer justifySmall = \"space-between\">\n                <Main>Toggle Dark Mode</Main>\n                <ThemeToggler handleDarkMode={handleDarkMode} isDarkMode={isDarkMode}/>\n            </OptionContainer>\n        </div>\n        )\n};\n\nexport default Settings;","export const accountsList = [\n    \"Cash\",\n    \"Bank 1\",\n    \"Bank 2\",\n    \"Savings\",\n    \"Card\",\n    \"Other\",\n];","export const categoriesList = {\n\tincome: [\n\t\t\"Salary\",\n\t\t\"Investment\",\n\t\t\"Bonus\",\n\t\t\"Petty Cash\",\n\t\t\"Allowance\",\n\t\t\"Gift\",\n\t\t\"Collected Debt\",\n\t\t\"Commission\",\n\t\t\"Interest\",\n\t\t\"Other\",\n\t],\n\texpense: [\n\t\t\"Food\",\n\t\t\"Transportation\",\n\t\t\"Apparel\",\n\t\t\"Health\",\n\t\t\"Self-Development\",\n\t\t\"Household\",\n\t\t\"Gift\",\n\t\t\"Social Life\",\n\t\t\"Gifts\",\n        \"Gadgets\",\n        \"Beauty\",\n        \"Education\",\n\t\t\"Other\",\n\t],\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport moment from \"moment\";\n\n// Components\nimport TransactionInput from \"./subcomponents/TransactionInput/TransactionInput\";\nimport TransactionOutput from \"./subcomponents/TransactionOutput/TransactionOutput\";\nimport Stats from \"./subcomponents/Stats/Stats\";\nimport Accounts from \"./subcomponents/Accounts/Accounts\";\nimport Settings  from \"./subcomponents/Settings/Settings\";\n\n// Helpers\nimport { processData } from \"../../helpers/groupingData\";\nimport { accountsList } from \"../../helpers/accountList\";\nimport { categoriesList } from \"../../helpers/categoriesList\";\nimport { calcTotalOfFiltered, calcFromAccount, computeAssets, computeLiabilities } from \"../../helpers/calc\";\n\n// Styled Components\nimport { ModalBackground } from \"../../styled-components/Default.styled\";\n\nfunction Main(props) {\n\t// * === PROPS === * //\n\tconst {option, handleDarkMode, isDarkMode} = props;\n \n\t// * === STATES - DATA === //\n\tconst [accounts] = useState(accountsList);\n\tconst [categories] = useState(categoriesList);\n\n\t// Stores the transaction data to be displayed on TransactionOutput\n\tconst [processedData, setProcessedData] = useState([]);\n\n\t// Stores the submitted entries of the user\n\tconst [transaction, setTransaction] = useState([]);\n\n\t// Stores the transaction ID for editing / deleting\n\tconst [transId, setTransId] = useState(\"\");\n\n\t// Stores the data of the selected transaction for editing\n\tconst [clickedTransData, setClickedTransData] = useState({});\n\n\t// Stores the month (based on index) and year to be displayed in TransactionOutput\n\tconst [dateToRender, setDateToRender] = useState({\n\t\tmonth: moment(new Date()).month(),\n\t\tyear: moment(new Date()).year(),\n\t});\n\n\t// Stores the filtered data that the user will see based on the date selected\n\tconst [dataToRender, setDataToRender] = useState(dateToRender);\n\n\t// * === STATES - CONDITIONAL RENDERING === //\n\t// show/hide the Form component\n\tconst [showForm, setShowForm] = useState(false);\n\n\t// Two values: add and edit for TransactionInput\n\tconst [mode, setMode] = useState(\"add\");\n\n\t// * ==== FUNCTIONS : DATA ==== * //\n\tconst handleAddTransaction = (value) => {\n\t\tsetTransaction((prevData) => [value, ...prevData]);\n\t};\n\n\tconst getTransactionIndex = (array, id) => array.map((item) => item.id).indexOf(Number(id));\n\n\tconst getTransactionId = (event) => {\n\t\tevent.preventDefault();\n\t\tconst target = event.currentTarget.getAttribute(\"data-id\");\n\t\tsetTransId(target);\n\t};\n\n\tconst handleEditTransaction = (value) => {\n\t\tconst index = getTransactionIndex(transaction, transId);\n\t\tlet newTransaction = [...transaction];\n\t\tnewTransaction[index] = value;\n\t\tsetTransaction(newTransaction);\n\t};\n\n\tconst handleDeleteTransaction = () => {\n\t\tconst index = getTransactionIndex(transaction, transId);\n\t\tsetTransaction((prev) => prev.filter((item, i) => i !== index));\n\t\thideForm();\n\t};\n\n\tconst moveToPreviousMonth = () => {\n\t\tlet newDate = dateToRender;\n\t\tif (newDate.month - 1 < 0) {\n\t\t\tnewDate.year = newDate.year - 1;\n\t\t\tnewDate.month = 11;\n\t\t} else {\n\t\t\tnewDate.month = newDate.month - 1;\n\t\t}\n\t\tsetDateToRender({ year: newDate.year, month: newDate.month });\n\t};\n\n\tconst moveToNextMonth = () => {\n\t\tlet newDate = dateToRender;\n\t\tif (newDate.month + 1 > 11) {\n\t\t\tnewDate.year = newDate.year + 1;\n\t\t\tnewDate.month = 0;\n\t\t} else {\n\t\t\tnewDate.month = newDate.month + 1;\n\t\t}\n\t\tsetDateToRender({ year: newDate.year, month: newDate.month });\n\t};\n\n\tconst initialState = {\n\t\ttotalAssets: 0,\n\t\ttotalLiabilities: 0,\n\t\titems: [],\n\t};\n\tconst [accountsInfo, setAccountsInfo] = useState(initialState);\n\n\t// Create an initial render\n\tconst getAccounts = () => {\n\t\tlet initial = initialState;\n\t\tfor (let element of accounts) {\n\t\t\tlet account = {\n\t\t\t\taccountName: element,\n\t\t\t\tvalue: 0,\n\t\t\t};\n\t\t\tinitial.items.push(account);\n\t\t}\n\t\treturn initial;\n\t};\n\n\t// * ==== FUNCTIONS : CONDITIONAL RENDERING ==== * //\n\tconst setToAddForm = () => {\n\t\tsetMode(\"add\");\n\t\tdisplayForm();\n\t};\n\n\tconst displayForm = () => {\n\t\tsetShowForm(true);\n\t};\n\n\tconst hideForm = () => {\n\t\t// Reset transaction ID to make the transaction re-clickable\n\t\tsetTransId(\"\");\n\t\tsetShowForm(false);\n\t};\n\n\t// * ==== USEEFFECT ==== * //\n\n\t// Do not run useEffect on first render\n\t// Side effect whenever we're adding/editing/deleting a new transaction\n\tconst firstUpdate = useRef(true);\n\tuseEffect(() => {\n\t\tif (firstUpdate.current) {\n\t\t\tfirstUpdate.current = false;\n\t\t\treturn;\n\t\t}\n\t\tsetProcessedData(processData(transaction));\n\t}, [transaction]);\n\n\t// Side effect when we're changing the month to be displayed\n\tuseEffect(() => {\n\t\tconst filterDataToRender = () => {\n\t\t\tlet data = processedData.filter(\n\t\t\t\t({ month, year }) =>\n\t\t\t\t\tmonth === moment.monthsShort(dateToRender.month) &&\n\t\t\t\t\tyear === dateToRender.year.toString()\n\t\t\t);\n\n\t\t\tdata.length !== 0 ? setDataToRender(data[0]) : setDataToRender(dateToRender);\n\t\t};\n\n\t\tfilterDataToRender();\n\t}, [processedData, dateToRender]);\n\n\t// Side effect when we're clicking a transaction to edit it\n\tuseEffect(() => {\n\t\tif (transId !== \"\") {\n\t\t\tconst index = getTransactionIndex(transaction, transId);\n\t\t\tsetClickedTransData(transaction[index]);\n\t\t\tsetMode(\"edit\");\n\t\t\tdisplayForm();\n\t\t}\n\t}, [transId, transaction]);\n\n\tuseEffect(() => {\n\t\tconst handleData = () => {\n\t\t\tlet data = initialState;\n\n\t\t\tfor (let element of accounts) {\n\t\t\t\tlet account = {\n\t\t\t\t\taccountName: element,\n\t\t\t\t\tvalue: 0,\n\t\t\t\t};\n\n\t\t\t\t// Compute total amount of account\n\t\t\t\taccount.value =\n\t\t\t\t\tcalcTotalOfFiltered(transaction, \"toAccount\", element, \"transactionAmount\") +\n\t\t\t\t\tcalcFromAccount(transaction, \"fromAccount\", element, \"transactionAmount\");\n\n\t\t\t\tdata.items.push(account);\n\t\t\t}\n\n\t\t\tif (data.items.length !== 0) {\n\t\t\t\tdata.totalAssets = computeAssets(data.items);\n\t\t\t\tdata.totalLiabilities = computeLiabilities(data.items);\n\t\t\t}\n\n\t\t\tsetAccountsInfo(data);\n\t\t};\n\t\thandleData();\n\t}, [transaction, accounts]);\n\n\treturn (\n\t\t<>\n\t\t\t<ModalBackground show={showForm} />\n\t\t\t\t{showForm && (\n\t\t\t\t\t<TransactionInput\n\t\t\t\t\t\taccounts={accounts}\n\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t\thandleAddTransaction={handleAddTransaction}\n\t\t\t\t\t\tclickedTransData={clickedTransData}\n\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\thideForm={hideForm}\n\t\t\t\t\t\thandleEditTransaction={handleEditTransaction}\n\t\t\t\t\t\thandleDeleteTransaction={handleDeleteTransaction}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\n\t\t\t{ option === \"transactions\" && (\n\t\t\t\t<TransactionOutput\n\t\t\t\t\tgetTransactionId={getTransactionId}\n\t\t\t\t\tmoveToNextMonth={moveToNextMonth}\n\t\t\t\t\tmoveToPreviousMonth={moveToPreviousMonth}\n\t\t\t\t\tdataToRender={dataToRender}\n\t\t\t\t\tsetToAddForm={setToAddForm}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t\n\n\t\t\t{ option === \"stats\" && (\n\t\t\t\t<Stats \n\t\t\t\t\ttransaction={transaction} \n\t\t\t\t\tdateToRender={dateToRender}\n\t\t\t\t\tdataToRender = {dataToRender}\n\t\t\t\t\tmoveToNextMonth={moveToNextMonth}\n\t\t\t\t\tmoveToPreviousMonth={moveToPreviousMonth}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{option === \"accounts\" && (\n\t\t\t\t<Accounts\n\t\t\t\t\taccountsInfo={accountsInfo}\n\t\t\t\t\tgetAccounts={getAccounts}\n\t\t\t\t\tinitialState={initialState}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{option === \"settings\" && (\n\t\t\t\t<Settings\n\t\t\t\t\thandleDarkMode = {handleDarkMode}\n\t\t\t\t\tisDarkMode = {isDarkMode}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\n\t)\n}\n\nexport default Main;","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    * {\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n    }\n\n    body {\n        padding: 0;\n        margin: 0;\n        background: ${({ theme }) => theme.background};\n    }\n\n    p, label {\n        font-size: 12px;\n        font-family: 'Roboto', sans-serif;\n        margin: 0; \n\n        @media screen and (min-width: 1024px) {\n            font-size: 18px;\n        }\n    }\n\n\n\n    button {\n        padding: 0;\n        outline: none;\n        cursor: pointer;\n        background: none;\n        background-clip: padding-box;\n        border: 1px solid transparent;\n        box-shadow: rgba(0, 0, 0, 0.02) 0 1px 3px 0;\n        transition: all 250ms;\n        user-select: none;\n        -webkit-user-select: none;\n\n        &:hover, &:focus {\n            box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\n            transform: translateY(-1px);\n        }\n\n        &:active {\n            box-shadow: rgba(0, 0, 0, .06) 0 2px 4px;\n            transform: translateY(0);\n        }\n    }\n`;\n","import React, { useState } from \"react\";\nimport Sidebar from \"./components/sidebar/Sidebar\";\nimport Main from \"./components/Main/Main\";\n\n\n// Styled Components\nimport { GlobalStyle } from \"./styled-components/GlobalStyle\";\nimport { AppContainer } from \"./styled-components/Default.styled\";\nimport { ThemeProvider } from \"styled-components\";\nimport * as ThemeColors from \"./styled-components/ThemeColors.styled\";\n\nfunction App() {\n\tconst [isDarkMode, setIsDarkMode] = useState(false);\n\tconst [option, setOption] = useState(\"transactions\");\n\tconst handleDarkMode = () => {\n\t\tsetIsDarkMode(!isDarkMode);\n\t};\n\n\tconst handleOptionChange = (event) => {\n\t\tlet value = event.target.value;\n\t\tsetOption(value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={isDarkMode ? ThemeColors.dark : ThemeColors.light}>\n\t\t\t\t<GlobalStyle />\n\n\t\t\t\t<AppContainer>\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\toption = {option}\n\t\t\t\t\t\thandleOptionChange = {handleOptionChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Main\n\t\t\t\t\t\thandleDarkMode = {handleDarkMode}\n\t\t\t\t\t\tisDarkMode = {isDarkMode}\n\t\t\t\t\t\toption = {option}\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t</AppContainer>\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}